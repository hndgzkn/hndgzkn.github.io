
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/multicsc/plot_somato_mu_waves.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_multicsc_plot_somato_mu_waves.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_multicsc_plot_somato_mu_waves.py:


===========================================================
Extracting :math:`\mu`-wave from the somato-sensory dataset
===========================================================

This example illustrates how to learn rank-1 atoms [1]_ on the multivariate
somato-sensorymotor dataset from :code:`mne`. The displayed results highlight
the presence of :math:`\mu`-waves located in the SI cortex.

.. [1] Dupré La Tour, T., Moreau, T., Jas, M., & Gramfort, A. (2018).
    `Multivariate Convolutional Sparse Coding for Electromagnetic Brain Signals
    <https://arxiv.org/abs/1805.09654v2>`_. Advances in Neural Information
    Processing Systems (NIPS).

.. GENERATED FROM PYTHON SOURCE LINES 15-23

.. code-block:: default


    # Authors: Thomas Moreau <thomas.moreau@inria.fr>
    #          Mainak Jas <mainak.jas@telecom-paristech.fr>
    #          Tom Dupre La Tour <tom.duprelatour@telecom-paristech.fr>
    #          Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr>
    #
    # License: BSD (3-clause)








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Let us first define the parameters of our model.

.. GENERATED FROM PYTHON SOURCE LINES 25-32

.. code-block:: default


    sfreq = 150.

    # Define the shape of the dictionary
    n_atoms = 25
    n_times_atom = int(round(sfreq * 1.0))  # 1000. ms








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Next, we define the parameters for multivariate CSC

.. GENERATED FROM PYTHON SOURCE LINES 34-56

.. code-block:: default


    from alphacsc import BatchCDL
    cdl = BatchCDL(
        # Shape of the dictionary
        n_atoms=n_atoms,
        n_times_atom=n_times_atom,
        # Request a rank1 dictionary with unit norm temporal and spatial maps
        rank1=True, uv_constraint='separate',
        # Initialize the dictionary with random chunk from the data
        D_init='chunk',
        # rescale the regularization parameter to be 20% of lambda_max
        lmbd_max="scaled", reg=.2,
        # Number of iteration for the alternate minimization and cvg threshold
        n_iter=100, eps=1e-4,
        # solver for the z-step
        solver_z="lgcd", solver_z_kwargs={'tol': 1e-2, 'max_iter': 1000},
        # solver for the d-step
        solver_d='alternate_adaptive', solver_d_kwargs={'max_iter': 300},
        # Technical parameters
        verbose=1, random_state=0, n_jobs=6)









.. GENERATED FROM PYTHON SOURCE LINES 57-60

Here, we load the data from the somato-sensory dataset and preprocess them
in epochs. The epochs are selected around the stim, starting 2 seconds
before and finishing 4 seconds after.

.. GENERATED FROM PYTHON SOURCE LINES 60-66

.. code-block:: default


    from alphacsc.datasets.mne_data import load_data
    t_lim = (-2, 4)
    X, info = load_data(dataset='somato', epoch=t_lim, sfreq=sfreq)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Using default location ~/mne_data for somato...
      0%|                                               | 0.00/611M [00:00<?, ?B/s]      0%|                                      | 1.29M/611M [00:00<00:47, 12.8MB/s]      0%|▏                                     | 2.63M/611M [00:00<00:45, 13.2MB/s]      1%|▏                                     | 3.96M/611M [00:00<00:53, 11.3MB/s]      1%|▎                                     | 5.26M/611M [00:00<00:52, 11.5MB/s]      1%|▍                                     | 6.74M/611M [00:00<00:48, 12.6MB/s]      1%|▌                                     | 8.13M/611M [00:00<00:46, 12.9MB/s]      2%|▌                                     | 9.71M/611M [00:00<00:44, 13.5MB/s]      2%|▋                                     | 11.3M/611M [00:00<00:42, 14.1MB/s]      2%|▊                                     | 12.8M/611M [00:00<00:41, 14.5MB/s]      2%|▉                                     | 14.4M/611M [00:01<00:41, 14.5MB/s]      3%|▉                                     | 16.0M/611M [00:01<00:40, 14.6MB/s]      3%|█                                     | 17.5M/611M [00:01<00:40, 14.6MB/s]      3%|█▏                                    | 19.0M/611M [00:01<00:40, 14.8MB/s]      3%|█▎                                    | 20.5M/611M [00:01<00:40, 14.5MB/s]      4%|█▎                                    | 22.0M/611M [00:01<00:40, 14.5MB/s]      4%|█▍                                    | 23.5M/611M [00:01<00:43, 13.6MB/s]      4%|█▌                                    | 24.8M/611M [00:01<00:43, 13.5MB/s]      4%|█▋                                    | 26.2M/611M [00:01<00:45, 12.9MB/s]      5%|█▋                                    | 27.5M/611M [00:02<00:46, 12.5MB/s]      5%|█▊                                    | 28.7M/611M [00:02<00:47, 12.2MB/s]      5%|█▊                                    | 30.0M/611M [00:02<00:54, 10.7MB/s]      5%|█▉                                    | 31.1M/611M [00:02<00:55, 10.4MB/s]      5%|██                                    | 32.1M/611M [00:02<00:55, 10.5MB/s]      5%|██                                    | 33.2M/611M [00:02<00:57, 10.1MB/s]      6%|██▏                                   | 34.2M/611M [00:02<00:57, 10.1MB/s]      6%|██▏                                   | 35.2M/611M [00:02<01:01, 9.42MB/s]      6%|██▎                                   | 36.2M/611M [00:02<00:59, 9.58MB/s]      6%|██▎                                   | 37.2M/611M [00:03<01:00, 9.48MB/s]      7%|██▌                                   | 40.7M/611M [00:03<00:34, 16.6MB/s]      8%|██▉                                   | 46.7M/611M [00:03<00:19, 29.0MB/s]      9%|███▎                                  | 52.7M/611M [00:03<00:14, 38.1MB/s]     10%|███▌                                  | 58.2M/611M [00:03<00:13, 42.2MB/s]     10%|███▉                                  | 62.4M/611M [00:03<00:24, 21.9MB/s]     11%|████                                  | 65.7M/611M [00:04<00:29, 18.2MB/s]     11%|████▎                                 | 68.4M/611M [00:04<00:33, 16.3MB/s]     12%|████▍                                 | 70.6M/611M [00:04<00:35, 15.1MB/s]     12%|████▌                                 | 72.6M/611M [00:04<00:43, 12.2MB/s]     12%|████▌                                 | 74.1M/611M [00:05<00:45, 11.7MB/s]     12%|████▋                                 | 75.5M/611M [00:05<00:50, 10.6MB/s]     13%|████▊                                 | 76.7M/611M [00:05<00:50, 10.5MB/s]     13%|████▊                                 | 77.8M/611M [00:05<00:56, 9.49MB/s]     13%|████▉                                 | 78.9M/611M [00:05<00:57, 9.29MB/s]     13%|████▉                                 | 79.9M/611M [00:05<01:00, 8.84MB/s]     13%|█████                                 | 80.8M/611M [00:05<01:01, 8.60MB/s]     13%|█████                                 | 81.7M/611M [00:05<01:01, 8.54MB/s]     14%|█████▏                                | 82.9M/611M [00:06<00:55, 9.52MB/s]     14%|█████▏                                | 83.9M/611M [00:06<00:55, 9.54MB/s]     14%|█████▎                                | 85.1M/611M [00:06<00:55, 9.41MB/s]     14%|█████▎                                | 86.1M/611M [00:06<00:54, 9.63MB/s]     14%|█████▍                                | 87.1M/611M [00:06<00:54, 9.56MB/s]     14%|█████▍                                | 88.1M/611M [00:06<01:00, 8.58MB/s]     15%|█████▌                                | 89.0M/611M [00:06<01:05, 7.95MB/s]     15%|█████▌                                | 89.8M/611M [00:06<01:05, 8.00MB/s]     15%|█████▋                                | 90.8M/611M [00:06<01:03, 8.20MB/s]     15%|█████▋                                | 91.7M/611M [00:07<01:06, 7.86MB/s]     15%|█████▊                                | 92.7M/611M [00:07<01:03, 8.10MB/s]     15%|█████▊                                | 93.7M/611M [00:07<01:00, 8.55MB/s]     16%|█████▉                                | 94.8M/611M [00:07<00:58, 8.82MB/s]     16%|██████▏                               | 99.9M/611M [00:07<00:24, 20.6MB/s]     17%|██████▊                                | 106M/611M [00:07<00:15, 31.6MB/s]     18%|███████▏                               | 112M/611M [00:07<00:12, 40.2MB/s]     19%|███████▌                               | 118M/611M [00:07<00:10, 46.6MB/s]     20%|███████▉                               | 125M/611M [00:07<00:09, 51.4MB/s]     21%|████████▎                              | 131M/611M [00:08<00:08, 54.6MB/s]     22%|████████▊                              | 137M/611M [00:08<00:08, 56.9MB/s]     23%|█████████▏                             | 143M/611M [00:08<00:07, 58.6MB/s]     24%|█████████▌                             | 150M/611M [00:08<00:07, 59.8MB/s]     26%|█████████▉                             | 156M/611M [00:08<00:07, 60.7MB/s]     27%|██████████▎                            | 162M/611M [00:08<00:07, 61.4MB/s]     28%|██████████▊                            | 168M/611M [00:08<00:07, 61.8MB/s]     29%|███████████▏                           | 175M/611M [00:08<00:06, 62.3MB/s]     30%|███████████▌                           | 181M/611M [00:08<00:06, 62.6MB/s]     31%|███████████▉                           | 187M/611M [00:09<00:12, 33.6MB/s]     31%|████████████▎                          | 192M/611M [00:09<00:23, 18.0MB/s]     32%|████████████▌                          | 196M/611M [00:10<00:27, 15.2MB/s]     33%|████████████▋                          | 199M/611M [00:10<00:29, 13.8MB/s]     33%|████████████▊                          | 201M/611M [00:10<00:30, 13.3MB/s]     33%|████████████▉                          | 203M/611M [00:10<00:31, 12.8MB/s]     34%|█████████████                          | 205M/611M [00:11<00:31, 13.0MB/s]     34%|█████████████▏                         | 206M/611M [00:11<00:31, 13.0MB/s]     34%|█████████████▎                         | 208M/611M [00:11<00:30, 13.2MB/s]     34%|█████████████▎                         | 209M/611M [00:11<00:29, 13.4MB/s]     35%|█████████████▍                         | 211M/611M [00:11<00:28, 13.8MB/s]     35%|█████████████▌                         | 212M/611M [00:11<00:28, 14.1MB/s]     35%|█████████████▋                         | 214M/611M [00:11<00:27, 14.2MB/s]     35%|█████████████▊                         | 215M/611M [00:11<00:29, 13.4MB/s]     35%|█████████████▊                         | 217M/611M [00:11<00:29, 13.4MB/s]     36%|█████████████▉                         | 218M/611M [00:12<00:29, 13.2MB/s]     37%|██████████████▎                        | 223M/611M [00:12<00:16, 23.5MB/s]     38%|██████████████▋                        | 229M/611M [00:12<00:11, 33.5MB/s]     39%|███████████████                        | 235M/611M [00:12<00:09, 41.3MB/s]     40%|███████████████▍                       | 241M/611M [00:12<00:07, 47.2MB/s]     40%|███████████████▊                       | 247M/611M [00:12<00:07, 50.8MB/s]     41%|████████████████                       | 252M/611M [00:12<00:14, 24.5MB/s]     42%|████████████████▎                      | 256M/611M [00:13<00:19, 18.3MB/s]     42%|████████████████▌                      | 259M/611M [00:13<00:20, 17.0MB/s]     43%|████████████████▋                      | 262M/611M [00:13<00:22, 15.8MB/s]     43%|████████████████▊                      | 264M/611M [00:14<00:23, 14.6MB/s]     44%|████████████████▉                      | 266M/611M [00:14<00:24, 14.2MB/s]     44%|█████████████████                      | 268M/611M [00:14<00:24, 13.9MB/s]     44%|█████████████████▏                     | 269M/611M [00:14<00:25, 13.4MB/s]     44%|█████████████████▎                     | 271M/611M [00:14<00:25, 13.1MB/s]     45%|█████████████████▍                     | 272M/611M [00:14<00:26, 12.7MB/s]     45%|█████████████████▍                     | 273M/611M [00:14<00:26, 12.6MB/s]     45%|█████████████████▌                     | 275M/611M [00:14<00:27, 12.3MB/s]     45%|█████████████████▌                     | 276M/611M [00:14<00:27, 12.2MB/s]     45%|█████████████████▋                     | 277M/611M [00:15<00:28, 11.8MB/s]     46%|█████████████████▊                     | 278M/611M [00:15<00:28, 11.5MB/s]     46%|█████████████████▊                     | 279M/611M [00:15<00:29, 11.3MB/s]     46%|█████████████████▉                     | 281M/611M [00:15<00:30, 10.9MB/s]     46%|█████████████████▉                     | 282M/611M [00:15<00:30, 10.6MB/s]     46%|██████████████████                     | 283M/611M [00:15<00:30, 10.8MB/s]     47%|██████████████████▏                    | 284M/611M [00:15<00:29, 11.1MB/s]     47%|██████████████████▏                    | 286M/611M [00:15<00:27, 11.6MB/s]     47%|██████████████████▍                    | 289M/611M [00:15<00:16, 19.4MB/s]     48%|██████████████████▊                    | 295M/611M [00:16<00:10, 30.3MB/s]     49%|███████████████████▏                   | 301M/611M [00:16<00:07, 39.2MB/s]     50%|███████████████████▋                   | 307M/611M [00:16<00:06, 45.9MB/s]     51%|████████████████████                   | 314M/611M [00:16<00:05, 50.6MB/s]     52%|████████████████████▍                  | 320M/611M [00:16<00:05, 54.3MB/s]     53%|████████████████████▊                  | 325M/611M [00:16<00:06, 46.1MB/s]     54%|█████████████████████▏                 | 331M/611M [00:16<00:05, 48.4MB/s]     55%|█████████████████████▌                 | 337M/611M [00:16<00:05, 52.2MB/s]     56%|█████████████████████▉                 | 343M/611M [00:16<00:04, 55.0MB/s]     57%|██████████████████████▎                | 350M/611M [00:17<00:04, 57.2MB/s]     58%|██████████████████████▋                | 356M/611M [00:17<00:04, 58.5MB/s]     59%|███████████████████████                | 362M/611M [00:17<00:04, 58.8MB/s]     60%|███████████████████████▍               | 368M/611M [00:17<00:08, 28.7MB/s]     61%|███████████████████████▊               | 372M/611M [00:17<00:10, 22.9MB/s]     62%|████████████████████████               | 376M/611M [00:18<00:11, 19.9MB/s]     62%|████████████████████████▏              | 379M/611M [00:18<00:14, 15.9MB/s]     62%|████████████████████████▎              | 381M/611M [00:18<00:15, 14.6MB/s]     63%|████████████████████████▍              | 383M/611M [00:19<00:17, 13.0MB/s]     63%|████████████████████████▌              | 385M/611M [00:19<00:18, 12.0MB/s]     63%|████████████████████████▋              | 386M/611M [00:19<00:19, 11.4MB/s]     63%|████████████████████████▋              | 387M/611M [00:19<00:20, 10.9MB/s]     64%|████████████████████████▊              | 388M/611M [00:19<00:20, 10.6MB/s]     64%|████████████████████████▉              | 390M/611M [00:19<00:22, 9.69MB/s]     64%|████████████████████████▉              | 391M/611M [00:19<00:22, 9.66MB/s]     64%|█████████████████████████              | 392M/611M [00:19<00:22, 9.63MB/s]     64%|█████████████████████████              | 393M/611M [00:20<00:22, 9.53MB/s]     64%|█████████████████████████▏             | 394M/611M [00:20<00:22, 9.72MB/s]     65%|█████████████████████████▏             | 395M/611M [00:20<00:20, 10.5MB/s]     65%|█████████████████████████▎             | 396M/611M [00:20<00:21, 10.2MB/s]     65%|█████████████████████████▎             | 397M/611M [00:20<00:22, 9.47MB/s]     65%|█████████████████████████▍             | 398M/611M [00:20<00:21, 9.72MB/s]     66%|█████████████████████████▊             | 404M/611M [00:20<00:09, 22.9MB/s]     67%|██████████████████████████▏            | 410M/611M [00:20<00:06, 33.2MB/s]     68%|██████████████████████████▍            | 413M/611M [00:21<00:09, 20.5MB/s]     68%|██████████████████████████▌            | 416M/611M [00:21<00:10, 18.9MB/s]     69%|██████████████████████████▋            | 419M/611M [00:21<00:11, 17.2MB/s]     69%|██████████████████████████▊            | 421M/611M [00:21<00:12, 15.5MB/s]     69%|██████████████████████████▉            | 422M/611M [00:21<00:14, 13.3MB/s]     69%|███████████████████████████            | 424M/611M [00:22<00:15, 12.3MB/s]     70%|███████████████████████████▏           | 425M/611M [00:22<00:15, 11.9MB/s]     70%|███████████████████████████▎           | 427M/611M [00:22<00:15, 11.7MB/s]     70%|███████████████████████████▎           | 428M/611M [00:22<00:16, 10.9MB/s]     70%|███████████████████████████▍           | 429M/611M [00:22<00:16, 10.8MB/s]     70%|███████████████████████████▍           | 430M/611M [00:22<00:16, 10.7MB/s]     71%|███████████████████████████▌           | 431M/611M [00:22<00:16, 11.1MB/s]     71%|███████████████████████████▋           | 433M/611M [00:22<00:15, 11.3MB/s]     71%|███████████████████████████▋           | 434M/611M [00:23<00:15, 11.2MB/s]     71%|███████████████████████████▊           | 435M/611M [00:23<00:15, 11.1MB/s]     71%|███████████████████████████▊           | 436M/611M [00:23<00:15, 11.3MB/s]     72%|███████████████████████████▉           | 437M/611M [00:23<00:15, 11.0MB/s]     72%|████████████████████████████           | 439M/611M [00:23<00:15, 11.3MB/s]     72%|████████████████████████████           | 440M/611M [00:23<00:14, 11.6MB/s]     72%|████████████████████████████▏          | 441M/611M [00:23<00:14, 11.4MB/s]     72%|████████████████████████████▎          | 442M/611M [00:23<00:17, 9.39MB/s]     73%|████████████████████████████▎          | 443M/611M [00:23<00:16, 9.96MB/s]     73%|████████████████████████████▍          | 445M/611M [00:24<00:16, 10.3MB/s]     73%|████████████████████████████▍          | 446M/611M [00:24<00:15, 10.4MB/s]     74%|████████████████████████████▋          | 450M/611M [00:24<00:09, 17.5MB/s]     75%|█████████████████████████████          | 456M/611M [00:24<00:05, 28.6MB/s]     76%|█████████████████████████████▍         | 462M/611M [00:24<00:03, 37.4MB/s]     77%|█████████████████████████████▉         | 468M/611M [00:24<00:03, 44.3MB/s]     77%|██████████████████████████████▏        | 472M/611M [00:24<00:05, 26.9MB/s]     78%|██████████████████████████████▍        | 476M/611M [00:25<00:06, 19.7MB/s]     78%|██████████████████████████████▌        | 479M/611M [00:25<00:07, 16.9MB/s]     79%|██████████████████████████████▋        | 481M/611M [00:25<00:09, 14.4MB/s]     79%|██████████████████████████████▊        | 483M/611M [00:25<00:09, 13.2MB/s]     79%|██████████████████████████████▉        | 485M/611M [00:26<00:09, 12.6MB/s]     80%|███████████████████████████████        | 486M/611M [00:26<00:10, 12.1MB/s]     80%|███████████████████████████████▏       | 487M/611M [00:26<00:10, 11.6MB/s]     80%|███████████████████████████████▏       | 489M/611M [00:26<00:10, 11.4MB/s]     80%|███████████████████████████████▎       | 490M/611M [00:26<00:10, 11.5MB/s]     80%|███████████████████████████████▍       | 491M/611M [00:26<00:10, 11.3MB/s]     81%|███████████████████████████████▍       | 492M/611M [00:26<00:10, 11.3MB/s]     81%|███████████████████████████████▌       | 494M/611M [00:26<00:09, 12.1MB/s]     81%|███████████████████████████████▋       | 496M/611M [00:26<00:08, 13.0MB/s]     81%|███████████████████████████████▊       | 497M/611M [00:27<00:08, 13.4MB/s]     82%|███████████████████████████████▊       | 499M/611M [00:27<00:07, 14.2MB/s]     82%|███████████████████████████████▉       | 500M/611M [00:27<00:07, 14.1MB/s]     82%|████████████████████████████████       | 502M/611M [00:27<00:08, 13.5MB/s]     82%|████████████████████████████████▏      | 503M/611M [00:27<00:08, 13.1MB/s]     83%|████████████████████████████████▏      | 504M/611M [00:27<00:08, 12.2MB/s]     83%|████████████████████████████████▎      | 506M/611M [00:27<00:08, 11.7MB/s]     84%|████████████████████████████████▌      | 510M/611M [00:27<00:04, 20.7MB/s]     85%|████████████████████████████████▉      | 516M/611M [00:27<00:03, 31.1MB/s]     85%|█████████████████████████████████▎     | 522M/611M [00:28<00:02, 39.1MB/s]     86%|█████████████████████████████████▋     | 528M/611M [00:28<00:01, 45.2MB/s]     87%|██████████████████████████████████     | 532M/611M [00:28<00:01, 39.1MB/s]     88%|██████████████████████████████████▎    | 537M/611M [00:28<00:03, 22.7MB/s]     88%|██████████████████████████████████▍    | 540M/611M [00:29<00:04, 17.6MB/s]     89%|██████████████████████████████████▋    | 542M/611M [00:29<00:04, 14.2MB/s]     89%|██████████████████████████████████▊    | 544M/611M [00:29<00:05, 12.7MB/s]     89%|██████████████████████████████████▉    | 546M/611M [00:29<00:06, 10.6MB/s]     90%|██████████████████████████████████▉    | 548M/611M [00:30<00:06, 9.30MB/s]     90%|███████████████████████████████████    | 549M/611M [00:30<00:06, 9.08MB/s]     90%|███████████████████████████████████    | 550M/611M [00:30<00:06, 8.92MB/s]     90%|███████████████████████████████████▏   | 551M/611M [00:30<00:06, 9.17MB/s]     90%|███████████████████████████████████▎   | 552M/611M [00:30<00:06, 9.20MB/s]     91%|███████████████████████████████████▎   | 553M/611M [00:30<00:06, 9.21MB/s]     91%|███████████████████████████████████▍   | 554M/611M [00:30<00:05, 9.41MB/s]     91%|███████████████████████████████████▍   | 555M/611M [00:30<00:05, 10.0MB/s]     91%|███████████████████████████████████▌   | 557M/611M [00:31<00:04, 11.2MB/s]     91%|███████████████████████████████████▋   | 558M/611M [00:31<00:04, 12.1MB/s]     92%|███████████████████████████████████▊   | 560M/611M [00:31<00:03, 13.1MB/s]     92%|███████████████████████████████████▊   | 561M/611M [00:31<00:03, 13.9MB/s]     92%|███████████████████████████████████▉   | 563M/611M [00:31<00:03, 14.4MB/s]     92%|████████████████████████████████████   | 564M/611M [00:31<00:03, 14.8MB/s]     93%|████████████████████████████████████▏  | 566M/611M [00:31<00:03, 14.6MB/s]     93%|████████████████████████████████████▏  | 567M/611M [00:31<00:03, 13.4MB/s]     94%|████████████████████████████████████▌  | 573M/611M [00:31<00:01, 24.5MB/s]     95%|████████████████████████████████████▉  | 579M/611M [00:31<00:00, 34.2MB/s]     96%|█████████████████████████████████████▎ | 585M/611M [00:32<00:00, 39.5MB/s]     96%|█████████████████████████████████████▌ | 589M/611M [00:32<00:01, 19.7MB/s]     97%|█████████████████████████████████████▊ | 592M/611M [00:32<00:01, 15.9MB/s]     97%|█████████████████████████████████████▉ | 594M/611M [00:33<00:01, 12.8MB/s]     98%|██████████████████████████████████████ | 596M/611M [00:33<00:01, 12.1MB/s]     98%|██████████████████████████████████████▏| 598M/611M [00:33<00:01, 11.9MB/s]     98%|██████████████████████████████████████▎| 599M/611M [00:33<00:00, 11.5MB/s]     98%|██████████████████████████████████████▎| 601M/611M [00:33<00:00, 11.0MB/s]     99%|██████████████████████████████████████▍| 602M/611M [00:33<00:00, 10.8MB/s]     99%|██████████████████████████████████████▌| 603M/611M [00:34<00:00, 10.8MB/s]     99%|██████████████████████████████████████▌| 604M/611M [00:34<00:00, 10.3MB/s]     99%|██████████████████████████████████████▋| 605M/611M [00:34<00:00, 9.38MB/s]     99%|██████████████████████████████████████▋| 606M/611M [00:34<00:00, 8.85MB/s]     99%|██████████████████████████████████████▊| 607M/611M [00:34<00:00, 8.57MB/s]    100%|██████████████████████████████████████▊| 608M/611M [00:34<00:00, 8.37MB/s]    100%|██████████████████████████████████████▉| 609M/611M [00:34<00:00, 8.17MB/s]    100%|██████████████████████████████████████▉| 610M/611M [00:34<00:00, 8.68MB/s]      0%|                                               | 0.00/611M [00:00<?, ?B/s]    100%|███████████████████████████████████████| 611M/611M [00:00<00:00, 1.56TB/s]
    Attempting to create new mne-python configuration file:
    /github/home/.mne/mne-python.json
    Opening raw data file /github/home/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_meg.fif...
        Range : 237600 ... 506999 =    791.189 ...  1688.266 secs
    Ready.
    Reading 0 ... 269399  =      0.000 ...   897.077 secs...
    Setting up band-stop filter

    FIR filter parameters
    ---------------------
    Designing a one-pass, zero-phase, non-causal bandstop filter:
    - Windowed time-domain design (firwin) method
    - Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation
    - Lower transition bandwidth: 0.50 Hz
    - Upper transition bandwidth: 0.50 Hz
    - Filter length: 1983 samples (6.603 sec)

    Filtering raw data in 1 contiguous segment
    Setting up high-pass filter at 2 Hz

    FIR filter parameters
    ---------------------
    Designing a one-pass, zero-phase, non-causal highpass filter:
    - Windowed time-domain design (firwin) method
    - Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation
    - Lower passband edge: 2.00
    - Lower transition bandwidth: 2.00 Hz (-6 dB cutoff frequency: 1.00 Hz)
    - Filter length: 497 samples (1.655 sec)

    111 events found
    Event IDs: [1]
    Not setting metadata
    111 matching events found
    Setting baseline interval to [-3.9992341833870637, 0.0] sec
    Applying baseline correction (mode: mean)
    0 projection items activated
    Using data from preloaded Raw for 111 events and 1202 original time points ...
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
    5 bad epochs dropped
    Computing rank from data with rank=None
        Using tolerance 7.5e-09 (2.2e-16 eps * 204 dim * 1.7e+05  max singular value)
        Estimated rank (grad): 204
        GRAD: rank 204 computed from 204 data channels with 0 projectors
    /github/workspace/alphacsc/datasets/mne_data.py:94: RuntimeWarning: Something went wrong in the data-driven estimation of the data rank as it exceeds the theoretical rank from the info (204 > 64). Consider setting rank to "auto" or setting it explicitly as an integer.
      cov = mne.compute_covariance(epochs_cov)
    Reducing data rank from 204 -> 204
    Estimating covariance using EMPIRICAL
    Done.
    Number of samples used : 127412
    [done]
    Not setting metadata
    111 matching events found
    Setting baseline interval to [-2.001282051803185, 0.0] sec
    Applying baseline correction (mode: mean)
    0 projection items activated
    Using data from preloaded Raw for 111 events and 1803 original time points ...
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
        Rejecting  epoch based on EOG : ['EOG 061']
    8 bad epochs dropped




.. GENERATED FROM PYTHON SOURCE LINES 67-68

Fit the model and learn rank1 atoms

.. GENERATED FROM PYTHON SOURCE LINES 68-70

.. code-block:: default

    cdl.fit(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ./github/workspace/alphacsc/utils/optim.py:136: DeprecationWarning: Please use `scalar_search_armijo` from the `scipy.optimize` namespace, the `scipy.optimize.linesearch` namespace is deprecated.
      step_size, obj_uv = optimize.linesearch.scalar_search_armijo(
    .............
    [BatchCDL] Converged after 14 iteration, (dz, du) = 8.570e-05, 8.726e-05
    [BatchCDL] Fit in 891.6s

    <alphacsc.convolutional_dictionary_learning.BatchCDL object at 0x7fcb04613430>



.. GENERATED FROM PYTHON SOURCE LINES 71-73

Display the 4-th atom, which displays a :math:`\mu`-waveform in its temporal
pattern.

.. GENERATED FROM PYTHON SOURCE LINES 73-108

.. code-block:: default


    import mne
    import numpy as np
    import matplotlib.pyplot as plt

    i_atom = 4
    n_plots = 3
    figsize = (n_plots * 5, 5.5)
    fig, axes = plt.subplots(1, n_plots, figsize=figsize, squeeze=False)

    # Plot the spatial map of the learn atom using mne topomap
    ax = axes[0, 0]
    u_hat = cdl.u_hat_[i_atom]
    mne.viz.plot_topomap(u_hat, info, axes=ax, show=False)
    ax.set(title='Learned spatial pattern')

    # Plot the temporal pattern of the learn atom
    ax = axes[0, 1]
    v_hat = cdl.v_hat_[i_atom]
    t = np.arange(v_hat.size) / sfreq
    ax.plot(t, v_hat)
    ax.set(xlabel='Time (sec)', title='Learned temporal waveform')
    ax.grid(True)

    # Plot the psd of the time atom
    ax = axes[0, 2]
    psd = np.abs(np.fft.rfft(v_hat)) ** 2
    frequencies = np.linspace(0, sfreq / 2.0, len(psd))
    ax.semilogy(frequencies, psd)
    ax.set(xlabel='Frequencies (Hz)', title='Power Spectral Density')
    ax.grid(True)
    ax.set_xlim(0, 30)

    plt.tight_layout()
    plt.show()



.. image-sg:: /auto_examples/multicsc/images/sphx_glr_plot_somato_mu_waves_001.png
   :alt: Learned spatial pattern, Learned temporal waveform, Power Spectral Density
   :srcset: /auto_examples/multicsc/images/sphx_glr_plot_somato_mu_waves_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 15 minutes  50.764 seconds)


.. _sphx_glr_download_auto_examples_multicsc_plot_somato_mu_waves.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_somato_mu_waves.py <plot_somato_mu_waves.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_somato_mu_waves.ipynb <plot_somato_mu_waves.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
